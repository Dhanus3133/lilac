apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://gateway-api.sigs.k8s.io/geps/gep-718
    controller-gen.kubebuilder.io/version: v0.11.3
  name: gateways.gateway.networking.k8s.io
spec:
  group: gateway.networking.k8s.io
  names:
    kind: Gateway
    listKind: GatewayList
    plural: gateways
    singular: gateway
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Gateway represents an instance of infrastructure that routes traffic.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of Gateway.
            properties:
              addresses:
                description: "Addresses requested for this Gateway. This is optional and behavior can depend on the implementation. If a value is set, the Gateway controller MUST attempt to assign addresses from this list to the Gateway. If the Gateway controller is unable to assign an address from this list, it MUST set the `Accepted` condition to `False` for the Gateway with a `Reason` of `AddressNotAssigned`. \n If no value is set, the Gateway controller MAY assign an address that it determines to be available, or it MAY not assign any address. \n Support: Extended"
                items:
                  description: "GatewayAddress describes an address that can be bound to a Gateway. \n Support: Core"
                  properties:
                    type:
                      description: "Type of the address. \n Support: Core"
                      enum:
                      - IPAddress
                      - Hostname
                      - NamedAddress
                      type: string
                    value:
                      description: "Value of the address. The validity of the value depends on the type. \n When Type is `IPAddress`, value is a valid IP address. \n When Type is `Hostname`, value is a valid RFC 1123 hostname. \n When Type is `NamedAddress`, value must be a configuration specific string that refers to an address managed by the Gateway Controller. \n Support: Core"
                      maxLength: 255
                      minLength: 1
                      type: string
                  required:
                  - value
                  type: object
                maxItems: 16
                type: array
              gatewayClassName:
                description: "GatewayClassName used for this Gateway. This is the name of a GatewayClass resource. \n Support: Core"
                maxLength: 253
                minLength: 1
                type: string
              infrastructure:
                description: "Infrastructure defines infrastructure level attributes for this Gateway. This is optional and behavior can depend on the implementation. \n Support: Implementation-specific"
                properties:
                  annotations:
                    additionalProperties:
                      maxLength: 4096
                      type: string
                    description: "Annotations that should be applied to the Gateway infrastructure. This is a list of key-value pairs that are passed directly to the underlying infrastructure. This is a merge patch, all annotations will be merged. \n Support: Implementation-specific"
                    type: object
                  labels:
                    additionalProperties:
                      maxLength: 63
                      pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                      type: string
                    description: "Labels that should be applied to the Gateway infrastructure. This is a list of key-value pairs that are passed directly to the underlying infrastructure. This is a merge patch, all labels will be merged. \n Support: Implementation-specific"
                    type: object
                  parameters:
                    additionalProperties:
                      type: string
                    description: "Parameters that should be applied to the Gateway infrastructure. This is a list of key-value pairs that are passed directly to the underlying infrastructure. \n Support: Implementation-specific"
                    type: object
                type: object
              listeners:
                description: "Listeners associated with this Gateway. Listeners define logical endpoints that are bound to the Gateway's address(es). \n Support: Core"
                items:
                  description: "Listener defines a logical endpoint on a Gateway to which traffic can be sent. \n Support: Core"
                  properties:
                    allowedRoutes:
                      description: "AllowedRoutes defines the types of routes that may be attached to a Listener and the namespaces where those routes may be defined. \n Support: Core"
                      properties:
                        kinds:
                          description: "Kinds are the kinds of routes that are allowed to bind to this Listener. When unspecified, this Listener does not support any future RouteGroupKinds. When multiple kinds are specified, this Listener supports all of them. \n Support: Core"
                          items:
                            description: RouteGroupKind indicates the group and kind of a Route resource.
                            properties:
                              group:
                                description: "Group is the group of the Route. \n Support: Core"
                                maxLength: 253
                                pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              kind:
                                description: "Kind is the kind of the Route. \n Support: Core"
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                type: string
                            required:
                            - kind
                            type: object
                          maxItems: 8
                          type: array
                        namespaces:
                          description: "Namespaces indicates namespaces from which Routes may be attached to this Listener. This is restricted to the namespace of this Gateway by default. \n Support: Core"
                          properties:
                            from:
                              description: "From indicates where Routes will be selected for this Gateway. Possible values are: \n * All: Routes in all namespaces may be attached to this Gateway. * Selector: Routes in namespaces selected by the selector may be attached to this Gateway. * Same: Only Routes in the same namespace may be attached to this Gateway. \n Support: Core"
                              enum:
                              - All
                              - Selector
                              - Same
                              type: string
                            selector:
                              description: "Selector must be specified when From is set to \"Selector\". In that case, only Routes in Namespaces matching this Selector may be attached to this Gateway. \n Support: Core"
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the selector applies to.
                                        type: string
                                      operator:
                                        description: "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist. \n In and NotIn operators must include a non-empty values array. Exists and DoesNotExist operators must not include a values array."
                                        type: string
                                      values:
                                        description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed. \n This field is authoritative. The result of looking up a resource by this label selector must be the same for all time, for a given resource version."
                                  type: object
                              type: object
                          required:
                          - from
                          type: object
                      type: object
                    hostname:
                      description: "Hostname for this Listener. This is an optional field that, if set, must be a valid RFC 1123 hostname. \n When using TLS, this field is used to determine which certificate will be used to terminate TLS for the given hostname. \n Support: Core"
                      maxLength: 253
                      minLength: 1
                      pattern: ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    name:
                      description: "Name is a unique name for this Listener. \n Support: Core"
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      type: string
                    port:
                      description: "Port is the network port this Listener listens on. \n Support: Core"
                      format: int32
                      maximum: 65535
                      minimum: 1
                      type: integer
                    protocol:
                      description: "Protocol to use for this Listener. \n Support: Core"
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    tls:
                      description: "TLS is the TLS configuration for the Listener. \n Support: Core"
                      properties:
                        certificateRefs:
                          description: "CertificateRefs contains a series of references to Kubernetes objects that contain TLS certificates and private keys. These certificates are used to establish a TLS handshake for requests that match the Listener's Hostname. \n Support: Core"
                          items:
                            description: "SecretObjectReference identifies an API object including its namespace, defaulting to the same namespace as the referent. \n The API object must be valid in the cluster; the Group and Kind must be registered in the cluster for this reference to be valid. \n References to objects with invalid Group and Kind are not valid, and must be ignored. \n In the context of TLS, this is used to reference a Secret containing the certificate and key in the `tls.crt` and `tls.key` fields, respectively. \n The certificate and key can also be referenced using the `core.v1.SecretReference` type. However, using this type may result in a secret being copied into the Gateway's namespace. This is not desirable for many cases, where secrets should be referenced from their existing locations. \n Support: Core"
                            properties:
                              group:
                                description: "Group is the group of the referent. For example, \"gateway.networking.k8s.io\". When unspecified or empty string, core API group is inferred."
                                maxLength: 253
                                pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              kind:
                                description: "Kind is the Kubernetes resource kind of the referent. For example, \"Secret\". \n Defaults to \"Secret\" when not specified. \n Support: Core"
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                type: string
                              name:
                                description: Name is the name of the referent.
                                maxLength: 253
                                minLength: 1
                                type: string
                              namespace:
                                description: "Namespace is the namespace of the backend. When unspecified, the local namespace is inferred. \n Support: Core"
                                maxLength: 63
                                minLength: 1
                                type: string
                            required:
                            - name
                            type: object
                          maxItems: 16
                          type: array
                        mode:
                          description: "Mode defines the TLS behavior for the Listener. \n Support: Core"
                          enum:
                          - Terminate
                          - Passthrough
                          type: string
                        options:
                          additionalProperties:
                            maxLength: 1024
                            minLength: 1
                            type: string
                          description: "Options are a list of key-value pairs to configure TLS. \n These options are implementation-specific. \n Support: Implementation-specific"
                          type: object
                      type: object
                  required:
                  - name
                  - port
                  - protocol
                  type: object
                maxItems: 16
                type: array
            required:
            - gatewayClassName
            - listeners
            type: object
          status:
            description: Status defines the current state of Gateway.
            properties:
              addresses:
                description: "Addresses lists the addresses that have been successfully assigned to the Gateway. \n Support: Core"
                items:
                  description: "GatewayAddress describes an address that can be bound to a Gateway. \n Support: Core"
                  properties:
                    type:
                      description: "Type of the address. \n Support: Core"
                      enum:
                      - IPAddress
                      - Hostname
                      - NamedAddress
                      type: string
                    value:
                      description: "Value of the address. The validity of the value depends on the type. \n When Type is `IPAddress`, value is a valid IP address. \n When Type is `Hostname`, value is a valid RFC 1123 hostname. \n When Type is `NamedAddress`, value must be a configuration specific string that refers to an address managed by the Gateway Controller. \n Support: Core"
                      maxLength: 255
                      minLength: 1
                      type: string
                  required:
                  - value
                  type: object
                maxItems: 16
                type: array
              conditions:
                description: "Conditions describe the current status of the Gateway. \n Support: Core"
                items:
                  description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type MyAPIResourceStatus struct{ // Represents the observations of a MyAPIResource's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields } \n Deprecated: This struct is direct from the Kubernetes API and is being deprecated in favor of the simpler Condition struct. It will be removed in a future version. See the condition types in the \"meta\" package for the replacement."
                  properties:
                    lastTransitionTime:
                      description: "lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable. \n This field is required."
                      format: date-time
                      type: string
                    message:
                      description: "message is a human readable message indicating details about the transition. This may be an empty string. \n This field is required."
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: "reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty. \n This field is required."
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: "status of the condition, one of True, False, Unknown. \n This field is required."
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: "type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt) \n This field is required."
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                type: array
              infrastructure:
                description: "Infrastructure provides infrastructure-specific status information. \n Support: Implementation-specific"
                properties:
                  annotations:
                    additionalProperties:
                      maxLength: 4096
                      type: string
                    description: "Annotations that are applied to the Gateway infrastructure. This is a list of key-value pairs that are passed directly to the underlying infrastructure. \n Support: Implementation-specific"
                    type: object
                  labels:
                    additionalProperties:
                      maxLength: 63
                      pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                      type: string
                    description: "Labels that are applied to the Gateway infrastructure. This is a list of key-value pairs that are passed directly to the underlying infrastructure. \n Support: Implementation-specific"
                    type: object
                  parameters:
                    additionalProperties:
                      type: string
                    description: "Parameters that are applied to the Gateway infrastructure. This is a list of key-value pairs that are passed directly to the underlying infrastructure. \n Support: Implementation-specific"
                    type: object
                type: object
              listeners:
                description: "Listeners provide status for each listener defined in the Spec. \n Support: Core"
                items:
                  description: ListenerStatus is the status of a Listener.
                  properties:
                    attachedRoutes:
                      description: "AttachedRoutes is the number of routes that are attached to the Listener. \n Support: Core"
                      format: int32
                      minimum: 0
                      type: integer
                    conditions:
                      description: "Conditions describe the current condition of this listener. \n Support: Core"
                      items:
                        description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type MyAPIResourceStatus struct{ // Represents the observations of a MyAPIResource's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields } \n Deprecated: This struct is direct from the Kubernetes API and is being deprecated in favor of the simpler Condition struct. It will be removed in a future version. See the condition types in the \"meta\" package for the replacement."
                        properties:
                          lastTransitionTime:
                            description: "lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable. \n This field is required."
                            format: date-time
                            type: string
                          message:
                            description: "message is a human readable message indicating details about the transition. This may be an empty string. \n This field is required."
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: "reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty. \n This field is required."
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: "status of the condition, one of True, False, Unknown. \n This field is required."
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: "type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt) \n This field is required."
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      maxItems: 8
                      type: array
                    name:
                      description: "Name is the name of the Listener that this status corresponds to. \n Support: Core"
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      type: string
                    supportedKinds:
                      description: "SupportedKinds is a list of RouteGroupKinds that are supported by this Listener. This is used to advertise the supported Route types for this Listener. \n When a RouteGroupKind is specified here, it should be honored by the implementation. \n Support: Core"
                      items:
                        description: RouteGroupKind indicates the group and kind of a Route resource.
                        properties:
                          group:
                            description: "Group is the group of the Route. \n Support: Core"
                            maxLength: 253
                            pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            type: string
                          kind:
                            description: "Kind is the kind of the Route. \n Support: Core"
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                            type: string
                        required:
                        - kind
                        type: object
                      maxItems: 8
                      type: array
                  required:
                  - attachedRoutes
                  - conditions
                  - name
                  - supportedKinds
                  type: object
                maxItems: 16
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []