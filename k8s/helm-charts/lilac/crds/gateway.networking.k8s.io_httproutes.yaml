apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: "https://gateway-api.sigs.k8s.io/geps/gep-713"
    controller-gen.kubebuilder.io/version: v0.11.3
  name: httproutes.gateway.networking.k8s.io
spec:
  group: gateway.networking.k8s.io
  names:
    kind: HTTPRoute
    listKind: HTTPRouteList
    plural: httproutes
    singular: httproute
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: HTTPRoute provides a way to route HTTP requests. This includes the capability to match requests by hostname, path, header, and query parameters. Filters can be used to specify additional processing steps. Backends specify where matching requests should be routed.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of HTTPRoute.
            properties:
              hostnames:
                description: "Hostnames defines a set of hostnames that should match against the HTTP Host header to select a HTTPRoute to process the request. This field is Core-level support. \n Support: Core"
                items:
                  description: "Hostname is the fully qualified domain name of a network host. This matches the RFC 1123 definition of a hostname with 2 notable exceptions: 1. IPs are not allowed. 2. A hostname may be prefixed with a wildcard label (`*.`). The wildcard label must appear by itself as the first label. \n If a hostname is specified by both the Listener and HTTPRoute, there must be at least one intersecting hostname for the HTTPRoute to be attached to the Listener. For example: \n * A Listener with `test.example.com` as the hostname matches HTTPRoutes that have either `test.example.com` or `*.example.com` as their hostname. * A Listener with `*.example.com` as the hostname matches HTTPRoutes with `test.example.com` or `*.example.com` as their hostname. * A Listener with `*.example.com` as the hostname does not match a HTTPRoute with `*.test.example.com` as their hostname. \n If both the Listener and HTTPRoute have specified hostnames, any HTTPRoute hostnames that do not match the Listener hostname MUST be ignored. For example, if a Listener specified `*.example.com`, and the HTTPRoute specified `test.example.com` and `test.test.example.com`, the `test.test.example.com` hostname is ignored. \n If the Listener has no spec.hostname set, then the HTTPRoute is attached to the Listener if the HTTPRoute has no hostnames specified. If the Listener has no spec.hostname set, and the HTTPRoute has hostnames specified, then the HTTPRoute is attached to the Listener and the GatewayVirtualHost is configured with the hostnames from the HTTPRoute. \n If the Listener has a wildcard hostname, and the HTTPRoute has a non-wildcard hostname, the non-wildcard hostname is used. \n If the Listener has a non-wildcard hostname, and the HTTPRoute has a wildcard hostname, the non-wildcard hostname is used."
                  maxLength: 253
                  minLength: 1
                  pattern: ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                  type: string
                maxItems: 16
                type: array
              parentRefs:
                description: "ParentRefs references the resources (usually Gateways) that a Route wants to be attached to. Note that the referenced parent resource needs to allow this Route to be attached. For example, a Gateway must have an attached Listener that allows this Route's parentRef to be valid. \n This field is Core-level support. \n Support: Core"
                items:
                  description: "ParentReference identifies an API object (usually a Gateway) that can be considered a parent of this resource (usually a route). There are two kinds of parent resources with following corresponding roles: \n * Gateway: A Gateway indicates the consumer of the route is an ingress controller. \n * Service: A Service indicates the consumer of the route is a Service Mesh. \n In either case, the parent object must belong to the same namespace as the route resource, unless it is a Gateway and cross-namespace references are enabled in that Gateway's Listener. \n The API object must be valid in the cluster; the Group and Kind must be registered in the cluster for this reference to be valid."
                  properties:
                    group:
                      description: Group is the group of the referent.
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      description: Kind is the kind of the referent.
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    name:
                      description: Name is the name of the referent.
                      maxLength: 253
                      minLength: 1
                      type: string
                    namespace:
                      description: "Namespace is the namespace of the referent. When unspecified, the local namespace is inferred. \n Note that when a namespace different than the local namespace is specified, a ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details. \n Support: Core"
                      maxLength: 63
                      minLength: 1
                      type: string
                    port:
                      description: "Port is the network port this Route targets. It can be interpreted differently based on the type of parent resource. \n When the parent resource is a Gateway, this targets all listeners listening on this port that also support this kind of Route. When the parent resource is a Service, this targets a port on the Service. This is a Core-level field. \n Support: Core"
                      format: int32
                      maximum: 65535
                      minimum: 1
                      type: integer
                    sectionName:
                      description: "SectionName is the name of a section within the target resource. In the following resources, this is interpreted as follows: \n * Gateway: Must be the name of a Listener in this Gateway. \n * Service: Must be the name of a port in this Service. \n This is a Core-level field. \n Support: Core"
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                  required:
                  - name
                  type: object
                maxItems: 16
                type: array
              rules:
                description: "Rules are a list of HTTP matchers, filters and actions. \n Support: Core"
                items:
                  description: HTTPRouteRule defines semantics for matching an HTTP request and forwarding it to an API object.
                  properties:
                    backendRefs:
                      description: "BackendRefs defines the backend(s) where matching requests should be sent. \n If unspecified, the request is aborted with a 500 status code. \n Support: Core"
                      items:
                        description: "HTTPBackendRef defines how to forward an HTTP request to a backend. \n Support: Core"
                        properties:
                          filters:
                            description: "Filters define the filters that are applied to requests that match this backendRef. \n Support: Core"
                            items:
                              description: "HTTPRouteFilter defines processing steps that must be completed during the request or response lifecycle. HTTPRouteFilters are meant to be defined by Gateway API implementers. When implementing a filter, controllers MUST NOT modify query parameters. \n Support: Core"
                              properties:
                                extensionRef:
                                  description: "ExtensionRef is an optional, implementation-specific details for filter behavior. \n Support: Implementation-specific"
                                  properties:
                                    group:
                                      description: Group is the group of the referent.
                                      maxLength: 253
                                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    kind:
                                      description: Kind is the kind of the referent.
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                      type: string
                                    name:
                                      description: Name is the name of the referent.
                                      maxLength: 253
                                      minLength: 1
                                      type: string
                                  required:
                                  - group
                                  - kind
                                  - name
                                  type: object
                                requestHeaderModifier:
                                  description: "RequestHeaderModifier defines a schema for a filter that modifies request headers. \n Support: Core"
                                  properties:
                                    add:
                                      description: "Add adds the given header(s) (name, value) to the request before the action. It appends to any existing values associated with the header name. \n Input:   The request headers   Process: For each header in the list, append the given header value to the request headers.   Output:  The new request headers"
                                      items:
                                        description: HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.
                                        properties:
                                          name:
                                            description: Name is the name of the HTTP Header to be matched. Name matching MUST be case insensitive. (see https://tools.ietf.org/html/rfc7230#section-3.2).
                                            maxLength: 256
                                            minLength: 1
                                            type: string
                                          value:
                                            description: Value is the value of HTTP Header to be matched.
                                            maxLength: 4096
                                            minLength: 0
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                    remove:
                                      description: "Remove the given header(s) from the request before the action. The value of Remove is a list of header names. Note that header names are case-insensitive. Remove shall not be used to modify an existing header's value. \n Input:   The request headers   Process: For each header name in the list, remove the corresponding header from the request.   Output:  The new request headers"
                                      items:
                                        maxLength: 256
                                        minLength: 1
                                        type: string
                                      maxItems: 16
                                      type: array
                                    set:
                                      description: "Set overwrites the request with the given header (name, value) before the action. \n Input:   The request headers   Process: For each header in the list, replace the value of the corresponding header with the new value. If the header does not exist, it is added.   Output:  The new request headers"
                                      items:
                                        description: HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.
                                        properties:
                                          name:
                                            description: Name is the name of the HTTP Header to be matched. Name matching MUST be case insensitive. (see https://tools.ietf.org/html/rfc7230#section-3.2).
                                            maxLength: 256
                                            minLength: 1
                                            type: string
                                          value:
                                            description: Value is the value of HTTP Header to be matched.
                                            maxLength: 4096
                                            minLength: 0
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                  type: object
                                requestMirror:
                                  description: "RequestMirror defines a schema for a filter that mirrors requests. Requests are sent to the specified destination, but responses from that destination are ignored. \n Support: Core"
                                  properties:
                                    backendRef:
                                      description: BackendRef references a resource where mirrored requests are sent.
                                      properties:
                                        group:
                                          description: "Group is the group of the referent. For example, \"gateway.networking.k8s.io\". When unspecified or empty string, core API group is inferred."
                                          maxLength: 253
                                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                          type: string
                                        kind:
                                          description: "Kind is the Kubernetes resource kind of the referent. For example, \"Service\". \n Defaults to \"Service\" when not specified. \n ExternalName services can refer to CNAME DNS records that may live outside of the cluster and can be used for mirroring. For more information, please see: https://kubernetes.io/docs/concepts/services-networking/service/#externalname"
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                          type: string
                                        name:
                                          description: Name is the name of the referent.
                                          maxLength: 253
                                          minLength: 1
                                          type: string
                                        namespace:
                                          description: "Namespace is the namespace of the backend. When unspecified, the local namespace is inferred. \n Support: Core"
                                          maxLength: 63
                                          minLength: 1
                                          type: string
                                        port:
                                          description: Port is the network port this Route targets. It can be interpreted differently based on the type of parent resource.
                                          format: int32
                                          maximum: 65535
                                          minimum: 1
                                          type: integer
                                      required:
                                      - name
                                      type: object
                                  required:
                                  - backendRef
                                  type: object
                                requestRedirect:
                                  description: "RequestRedirect defines a schema for a filter that responds to the request with an HTTP redirection. \n Support: Core"
                                  properties:
                                    hostname:
                                      description: Hostname is the hostname to be used in the value of the `Location` header in the response.
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    path:
                                      description: Path defines parameters used to modify the path of the incoming request. The modified path is used in the value of the `Location` header in the response.
                                      properties:
                                        replaceFullPath:
                                          description: ReplaceFullPath specifies the exact path to be used in the redirection URI. This path must be absolute, starting with a `/`.
                                          maxLength: 1024
                                          minLength: 1
                                          pattern: ^/.*$
                                          type: string
                                        replacePrefixMatch:
                                          description: ReplacePrefixMatch specifies the string that replaces the prefix matched by the rule.
                                          maxLength: 1024
                                          minLength: 0
                                          type: string
                                        type:
                                          description: Type defines how to modify the path.
                                          enum:
                                          - ReplaceFullPath
                                          - ReplacePrefixMatch
                                          type: string
                                      required:
                                      - type
                                      type: object
                                    port:
                                      description: Port is the port to be used in the value of the `Location` header in the response.
                                      format: int32
                                      maximum: 65535
                                      minimum: 1
                                      type: integer
                                    scheme:
                                      description: Scheme is the scheme to be used in the value of the `Location` header in the response.
                                      enum:
                                      - http
                                      - https
                                      type: string
                                    statusCode:
                                      description: StatusCode is the HTTP status code to be used in the response.
                                      enum:
                                      - 301
                                      - 302
                                      type: integer
                                  type: object
                                type:
                                  description: Type identifies the type of filter to apply.
                                  enum:
                                  - RequestHeaderModifier
                                  - RequestMirror
                                  - RequestRedirect
                                  - URLRewrite
                                  - ExtensionRef
                                  type: string
                                urlRewrite:
                                  description: "URLRewrite defines a schema for a filter that modifies a request during forwarding. \n Support: Extended"
                                  properties:
                                    hostname:
                                      description: "Hostname is the new hostname to replace the original host header value. \n Support: Extended"
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    path:
                                      description: "Path defines a path rewrite. \n Support: Extended"
                                      properties:
                                        replaceFullPath:
                                          description: "ReplaceFullPath specifies the exact path to rewrite the request's path to. \n Support: Extended"
                                          maxLength: 1024
                                          minLength: 1
                                          pattern: ^/.*$
                                          type: string
                                        replacePrefixMatch:
                                          description: "ReplacePrefixMatch specifies the string that replaces the prefix matched by the rule. \n Support: Extended"
                                          maxLength: 1024
                                          minLength: 0
                                          type: string
                                        type:
                                          description: "Type defines how to rewrite the path. \n Support: Extended"
                                          enum:
                                          - ReplaceFullPath
                                          - ReplacePrefixMatch
                                          type: string
                                      required:
                                      - type
                                      type: object
                                  type: object
                              required:
                              - type
                              type: object
                            maxItems: 16
                            type: array
                          group:
                            description: "Group is the group of the referent. For example, \"gateway.networking.k8s.io\". When unspecified or empty string, core API group is inferred. \n Support: Core"
                            maxLength: 253
                            pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            type: string
                          kind:
                            description: "Kind is the Kubernetes resource kind of the referent. For example, \"Service\". \n Defaults to \"Service\" when not specified. \n Support: Core"
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                            type: string
                          name:
                            description: "Name is the name of the referent. \n Support: Core"
                            maxLength: 253
                            minLength: 1
                            type: string
                          namespace:
                            description: "Namespace is the namespace of the backend. When unspecified, the local namespace is inferred. \n Support: Core"
                            maxLength: 63
                            minLength: 1
                            type: string
                          port:
                            description: "Port specifies the destination port number to use for this backendRef. \n Support: Core"
                            format: int32
                            maximum: 65535
                            minimum: 1
                            type: integer
                          weight:
                            description: "Weight specifies the proportion of traffic forwarded to the referenced backend. This is computed as weight/(sum of all weights in this BackendRefs list). For non-zero values, there may be some epsilon from the exact proportion defined here depending on the precision an implementation supports. Weight is not a percentage and the sum of weights does not need to equal 100. \n Support: Core"
                            format: int32
                            maximum: 1000000
                            minimum: 0
                            type: integer
                        required:
                        - name
                        type: object
                      maxItems: 16
                      type: array
                    filters:
                      description: "Filters define the filters that are applied to requests that match this rule. \n The effects of ordering of multiple filters are implementation-specific. Filters are applied after policy attachment has been resolved. \n Support: Core"
                      items:
                        description: "HTTPRouteFilter defines processing steps that must be completed during the request or response lifecycle. HTTPRouteFilters are meant to be defined by Gateway API implementers. When implementing a filter, controllers MUST NOT modify query parameters. \n Support: Core"
                        properties:
                          extensionRef:
                            description: "ExtensionRef is an optional, implementation-specific details for filter behavior. \n Support: Implementation-specific"
                            properties:
                              group:
                                description: Group is the group of the referent.
                                maxLength: 253
                                pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              kind:
                                description: Kind is the kind of the referent.
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                type: string
                              name:
                                description: Name is the name of the referent.
                                maxLength: 253
                                minLength: 1
                                type: string
                            required:
                            - group
                            - kind
                            - name
                            type: object
                          requestHeaderModifier:
                            description: "RequestHeaderModifier defines a schema for a filter that modifies request headers. \n Support: Core"
                            properties:
                              add:
                                description: "Add adds the given header(s) (name, value) to the request before the action. It appends to any existing values associated with the header name. \n Input:   The request headers   Process: For each header in the list, append the given header value to the request headers.   Output:  The new request headers"
                                items:
                                  description: HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: Name is the name of the HTTP Header to be matched. Name matching MUST be case insensitive. (see https://tools.ietf.org/html/rfc7230#section-3.2).
                                      maxLength: 256
                                      minLength: 1
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header to be matched.
                                      maxLength: 4096
                                      minLength: 0
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                              remove:
                                description: "Remove the given header(s) from the request before the action. The value of Remove is a list of header names. Note that header names are case-insensitive. Remove shall not be used to modify an existing header's value. \n Input:   The request headers   Process: For each header name in the list, remove the corresponding header from the request.   Output:  The new request headers"
                                items:
                                  maxLength: 256
                                  minLength: 1
                                  type: string
                                maxItems: 16
                                type: array
                              set:
                                description: "Set overwrites the request with the given header (name, value) before the action. \n Input:   The request headers   Process: For each header in the list, replace the value of the corresponding header with the new value. If the header does not exist, it is added.   Output:  The new request headers"
                                items:
                                  description: HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: Name is the name of the HTTP Header to be matched. Name matching MUST be case insensitive. (see https://tools.ietf.org/html/rfc7230#section-3.2).
                                      maxLength: 256
                                      minLength: 1
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header to be matched.
                                      maxLength: 4096
                                      minLength: 0
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                            type: object
                          requestMirror:
                            description: "RequestMirror defines a schema for a filter that mirrors requests. Requests are sent to the specified destination, but responses from that destination are ignored. \n Support: Core"
                            properties:
                              backendRef:
                                description: BackendRef references a resource where mirrored requests are sent.
                                properties:
                                  group:
                                    description: "Group is the group of the referent. For example, \"gateway.networking.k8s.io\". When unspecified or empty string, core API group is inferred."
                                    maxLength: 253
                                    pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                    type: string
                                  kind:
                                    description: "Kind is the Kubernetes resource kind of the referent. For example, \"Service\". \n Defaults to \"Service\" when not specified. \n ExternalName services can refer to CNAME DNS records that may live outside of the cluster and can be used for mirroring. For more information, please see: https://kubernetes.io/docs/concepts/services-networking/service/#externalname"
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                    type: string
                                  name:
                                    description: Name is the name of the referent.
                                    maxLength: 253
                                    minLength: 1
                                    type: string
                                  namespace:
                                    description: "Namespace is the namespace of the backend. When unspecified, the local namespace is inferred. \n Support: Core"
                                    maxLength: 63
                                    minLength: 1
                                    type: string
                                  port:
                                    description: Port is the network port this Route targets. It can be interpreted differently based on the type of parent resource.
                                    format: int32
                                    maximum: 65535
                                    minimum: 1
                                    type: integer
                                required:
                                - name
                                type: object
                            required:
                            - backendRef
                            type: object
                          requestRedirect:
                            description: "RequestRedirect defines a schema for a filter that responds to the request with an HTTP redirection. \n Support: Core"
                            properties:
                              hostname:
                                description: Hostname is the hostname to be used in the value of the `Location` header in the response.
                                maxLength: 253
                                minLength: 1
                                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              path:
                                description: Path defines parameters used to modify the path of the incoming request. The modified path is used in the value of the `Location` header in the response.
                                properties:
                                  replaceFullPath:
                                    description: ReplaceFullPath specifies the exact path to be used in the redirection URI. This path must be absolute, starting with a `/`.
                                    maxLength: 1024
                                    minLength: 1
                                    pattern: ^/.*$
                                    type: string
                                  replacePrefixMatch:
                                    description: ReplacePrefixMatch specifies the string that replaces the prefix matched by the rule.
                                    maxLength: 1024
                                    minLength: 0
                                    type: string
                                  type:
                                    description: Type defines how to modify the path.
                                    enum:
                                    - ReplaceFullPath
                                    - ReplacePrefixMatch
                                    type: string
                                required:
                                - type
                                type: object
                              port:
                                description: Port is the port to be used in the value of the `Location` header in the response.
                                format: int32
                                maximum: 65535
                                minimum: 1
                                type: integer
                              scheme:
                                description: Scheme is the scheme to be used in the value of the `Location` header in the response.
                                enum:
                                - http
                                - https
                                type: string
                              statusCode:
                                description: StatusCode is the HTTP status code to be used in the response.
                                enum:
                                - 301
                                - 302
                                type: integer
                            type: object
                          type:
                            description: Type identifies the type of filter to apply.
                            enum:
                            - RequestHeaderModifier
                            - RequestMirror
                            - RequestRedirect
                            - URLRewrite
                            - ExtensionRef
                            type: string
                          urlRewrite:
                            description: "URLRewrite defines a schema for a filter that modifies a request during forwarding. \n Support: Extended"
                            properties:
                              hostname:
                                description: "Hostname is the new hostname to replace the original host header value. \n Support: Extended"
                                maxLength: 253
                                minLength: 1
                                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              path:
                                description: "Path defines a path rewrite. \n Support: Extended"
                                properties:
                                  replaceFullPath:
                                    description: "ReplaceFullPath specifies the exact path to rewrite the request's path to. \n Support: Extended"
                                    maxLength: 1024
                                    minLength: 1
                                    pattern: ^/.*$
                                    type: string
                                  replacePrefixMatch:
                                    description: "ReplacePrefixMatch specifies the string that replaces the prefix matched by the rule. \n Support: Extended"
                                    maxLength: 1024
                                    minLength: 0
                                    type: string
                                  type:
                                    description: "Type defines how to rewrite the path. \n Support: Extended"
                                    enum:
                                    - ReplaceFullPath
                                    - ReplacePrefixMatch
                                    type: string
                                required:
                                - type
                                type: object
                            type: object
                        required:
                        - type
                        type: object
                      maxItems: 16
                      type: array
                    matches:
                      description: "Matches define conditions used for matching the rule against incoming HTTP requests. Each match is independent, i.e. this rule will be matched if any one of the matches is satisfied. \n For example, take the following matches configuration: \n ``` matches: - path:   value: \"/foo\"   headers:   - name: \"version\"     value: \"v2\" - path:   value: \"/v2/foo\" ``` \n For a request to match against this rule, the request's path must be `/foo` AND the request must have the `version: v2` header. OR the request's path must be `/v2/foo`. \n If no matches are specified, the default is a prefix path match on \"/\", which has the effect of matching every HTTP request. \n Proxy or Load Balancer routing configuration generated from HTTPRoutes MUST prioritize rules based on the following criteria, continuing on ties. Merging MUST NOT be done between any properties except for headers, which are merged from the rule's matches and filters. \n * Any rule with a hostname is lower priority than a rule without a hostname. * The following matching criteria MUST be sorted in descending order of priority:   - path.type: Exact   - path.type: PathPrefix   - method   - headers   - queryParams * If everything else is equivalent, the ordering of the rules MUST be determined by the order of the rules in the HTTPRoute resource. That is, the first rule matching a request MUST be used. \n Support: Core"
                      items:
                        description: HTTPRouteMatch defines the predicate used to match requests to a given action.
                        properties:
                          headers:
                            description: "Headers specifies a list of HTTP request headers to match against. Multiple header values are ANDed together, meaning all listed headers must be present for the match to be considered successful. \n Support: Core"
                            items:
                              description: HTTPHeaderMatch describes how to select a HTTP route by matching HTTP request headers.
                              properties:
                                name:
                                  description: Name is the name of the HTTP Header to be matched.
                                  maxLength: 256
                                  minLength: 1
                                  type: string
                                type:
                                  description: "Type specifies how to match against the value of the header. \n Support: Core (Exact with regular expressions is Extended support). \n Default: \"Exact\""
                                  enum:
                                  - Exact
                                  - RegularExpression
                                  type: string
                                value:
                                  description: Value is the value of HTTP Header to be matched.
                                  maxLength: 4096
                                  minLength: 0
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            maxItems: 16
                            type: array
                          method:
                            description: "Method specifies a HTTP method matcher. When specified, this route will be matched only if the request has the specified method. \n Support: Core"
                            enum:
                            - GET
                            - HEAD
                            - POST
                            - PUT
                            - DELETE
                            - CONNECT
                            - OPTIONS
                            - TRACE
                            - PATCH
                            type: string
                          path:
                            description: "Path specifies a HTTP request path matcher. If this field is not specified, a default prefix match on the \"/\" path is performed. \n Support: Core"
                            properties:
                              type:
                                description: "Type specifies how to match against the path Value. \n Support: Core (Exact, PathPrefix) \n Support: Implementation-specific (RegularExpression) \n Default: \"PathPrefix\""
                                enum:
                                - Exact
                                - PathPrefix
                                - RegularExpression
                                type: string
                              value:
                                description: Value of the path to match against.
                                maxLength: 1024
                                minLength: 1
                                type: string
                            type: object
                          queryParams:
                            description: "QueryParams specifies a list of HTTP query parameters to match against. Multiple query parameter values are ANDed together, meaning all listed query parameters must be present for the match to be considered successful. \n Support: Extended"
                            items:
                              description: HTTPQueryParamMatch describes how to select a HTTP route by matching HTTP query parameters.
                              properties:
                                name:
                                  description: Name is the name of the HTTP query param to be matched.
                                  minLength: 1
                                  type: string
                                type:
                                  description: "Type specifies how to match against the value of the query parameter. \n Support: Extended (Exact with regular expressions is Implementation-specific) \n Default: \"Exact\""
                                  enum:
                                  - Exact
                                  - RegularExpression
                                  type: string
                                value:
                                  description: Value is the value of HTTP query param to be matched.
                                  minLength: 1
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            maxItems: 16
                            type: array
                        type: object
                      maxItems: 8
                      type: array
                    timeouts:
                      description: "Timeouts defines the timeouts that can be configured for an HTTP request. \n Support: Extended"
                      properties:
                        backendRequest:
                          description: "BackendRequest is the timeout for a single backend request. This timeout is applied to each backendRef individually. For example, a value of `10s` applies a 10 second timeout to each backendRef of the rule. A value of `0` indicates that the timeout is disabled. \n Support: Extended"
                          pattern: ^(0|([0-9]+h)?([0-9]+m)?([0-9]+s)?([0-9]+ms)?)$
                          type: string
                        request:
                          description: "Request is the total timeout for the request, measured from when the Gateway first sees the request to when it has been completely processed. A value of `0` indicates that the timeout is disabled. \n Support: Extended"
                          pattern: ^(0|([0-9]+h)?([0-9]+m)?([0-9]+s)?([0-9]+ms)?)$
                          type: string
                      type: object
                  type: object
                maxItems: 16
                type: array
            required:
            - parentRefs
            type: object
          status:
            description: Status defines the current state of HTTPRoute.
            properties:
              parents:
                description: "Parents is a list of parent resources (usually Gateways) that are associated with the route, and the status of the route with respect to each parent. When this route attaches to a parent, a controller that manages the parent determines the corresponding status of this attachment. When a controller first sees a route attaching to a parent that it manages, it MUST add an entry to this list when the controller first sees the route and SHOULD update the entry as appropriate when the route is modified. \n Note that parent references that cannot be resolved by any controller will not be reflected in this list. \n A maximum of 16 parents can be represented in this list. \n Support: Core"
                items:
                  description: "RouteParentStatus describes the status of a route with respect to an individual parent resource. \n This field is Core-level support. \n Support: Core"
                  properties:
                    conditions:
                      description: "Conditions describes the status of the route with respect to the parent. Note that controllers only write conditions with a \"True\" status when the controller has successfully applied the configuration to its data plane. \n Support: Core"
                      items:
                        description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type MyAPIResourceStatus struct{ // Represents the observations of a MyAPIResource's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields } \n Deprecated: This struct is direct from the Kubernetes API and is being deprecated in favor of the simpler Condition struct. It will be removed in a future version. See the condition types in the \"meta\" package for the replacement."
                        properties:
                          lastTransitionTime:
                            description: "lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable. \n This field is required."
                            format: date-time
                            type: string
                          message:
                            description: "message is a human readable message indicating details about the transition. This may be an empty string. \n This field is required."
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: "reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty. \n This field is required."
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: "status of the condition, one of True, False, Unknown. \n This field is required."
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: "type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt) \n This field is required."
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      maxItems: 8
                      type: array
                    controllerName:
                      description: "ControllerName is the name of the controller that wrote this status. This corresponds to the name of the GatewayClass resource that has been granted permission to manage this route. \n Support: Core"
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    parentRef:
                      description: "ParentRef corresponds to the parent resource that this route is associated with. \n Support: Core"
                      properties:
                        group:
                          description: Group is the group of the referent.
                          maxLength: 253
                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                        kind:
                          description: Kind is the kind of the referent.
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                          type: string
                        name:
                          description: Name is the name of the referent.
                          maxLength: 253
                          minLength: 1
                          type: string
                        namespace:
                          description: "Namespace is the namespace of the referent. When unspecified, the local namespace is inferred. \n Note that when a namespace different than the local namespace is specified, a ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details. \n Support: Core"
                          maxLength: 63
                          minLength: 1
                          type: string
                        port:
                          description: "Port is the network port this Route targets. It can be interpreted differently based on the type of parent resource. \n When the parent resource is a Gateway, this targets all listeners listening on this port that also support this kind of Route. When the parent resource is a Service, this targets a port on the Service. This is a Core-level field. \n Support: Core"
                          format: int32
                          maximum: 65535
                          minimum: 1
                          type: integer
                        sectionName:
                          description: "SectionName is the name of a section within the target resource. In the following resources, this is interpreted as follows: \n * Gateway: Must be the name of a Listener in this Gateway. \n * Service: Must be the name of a port in this Service. \n This is a Core-level field. \n Support: Core"
                          maxLength: 253
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                      required:
                      - name
                      type: object
                  required:
                  - controllerName
                  - parentRef
                  type: object
                maxItems: 16
                type: array
            required:
            - parents
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []